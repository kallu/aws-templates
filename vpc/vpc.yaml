

---
AWSTemplateFormatVersion: '2010-09-09'
Description: VPC network v2.0.0

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: VPC CIDR(s)
        Parameters:
          - VpcCidr
          - VpcIntraCidr
      -
        Label:
          default: Public subnets
        Parameters:

          - PubCidrA

          - PubCidrB

          - PubCidrC

      -
        Label:
          default: Private subnets
        Parameters:

          - PrivCidrA

          - PrivCidrB

          - PrivCidrC

      -
        Label:
          default: Internal subnets
        Parameters:

          - IntraCidrA

          - IntraCidrB

          - IntraCidrC



Parameters:

  VpcCidr:
    Type: String
    Description: VPC Primary CIDR
    Default: "100.0.0.0/16"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"

  VpcIntraCidr:
    Type: String
    Description: VPC secondary CIDR for intranet connectivity
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"


  PubCidrA:
    Type: String
    Description: Public Subnet A
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  PrivCidrA:
    Type: String
    Description: Private Subnet A
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  IntraCidrA:
    Type: String
    Description: Intranet Subnet A
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  EipA:
    Type: String
    Description: Pre-allocated EIP ID for AZ-A (optional)
    Default: ""

  PubCidrB:
    Type: String
    Description: Public Subnet B
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  PrivCidrB:
    Type: String
    Description: Private Subnet B
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  IntraCidrB:
    Type: String
    Description: Intranet Subnet B
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  EipB:
    Type: String
    Description: Pre-allocated EIP ID for AZ-B (optional)
    Default: ""

  PubCidrC:
    Type: String
    Description: Public Subnet C
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  PrivCidrC:
    Type: String
    Description: Private Subnet C
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  IntraCidrC:
    Type: String
    Description: Intranet Subnet C
    Default: ""
    AllowedPattern: "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2])){0,1}$"
  EipC:
    Type: String
    Description: Pre-allocated EIP ID for AZ-C (optional)
    Default: ""


Conditions:

  PubA: !Not [!Equals [!Ref PubCidrA, "" ]]  
  PrivA: !Not [!Equals [!Ref PrivCidrA, "" ]]
  IntraA: !Not [!Equals [!Ref IntraCidrA, "" ]]
  NatA: !And [ Condition: PubA, Condition: PrivA ]
  CreateEipA: !And [ Condition: NatA, !Equals [!Ref EipA, "" ] ]

  PubB: !Not [!Equals [!Ref PubCidrB, "" ]]  
  PrivB: !Not [!Equals [!Ref PrivCidrB, "" ]]
  IntraB: !Not [!Equals [!Ref IntraCidrB, "" ]]
  NatB: !And [ Condition: PubB, Condition: PrivB ]
  CreateEipB: !And [ Condition: NatB, !Equals [!Ref EipB, "" ] ]

  PubC: !Not [!Equals [!Ref PubCidrC, "" ]]  
  PrivC: !Not [!Equals [!Ref PrivCidrC, "" ]]
  IntraC: !Not [!Equals [!Ref IntraCidrC, "" ]]
  NatC: !And [ Condition: PubC, Condition: PrivC ]
  CreateEipC: !And [ Condition: NatC, !Equals [!Ref EipC, "" ] ]

  PubAny: !Or [ Condition: PubA, Condition: PubB, Condition: PubC ]
  PrivAny: !Or [ Condition: PrivA, Condition: PrivB, Condition: PrivC ]
  IntraAny: !Or [ Condition: IntraA, Condition: IntraB, Condition: IntraC ]
  HasIntraCidr: !Not [!Equals [!Ref VpcIntraCidr, "" ]]

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default

  VPCSecondaryCidr:
    Type: AWS::EC2::VPCCidrBlock
    Condition: HasIntraCidr
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref VpcIntraCidr

Outputs:

  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'
